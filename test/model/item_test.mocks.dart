// Mocks generated by Mockito 5.4.0 from annotations
// in inventku/test/model/item_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:flutter/material.dart' as _i1;
import 'package:inventku/model/item_model.dart' as _i3;
import 'package:inventku/views/screen/item/item_view_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalKey_0<T extends _i1.State<_i1.StatefulWidget>>
    extends _i2.SmartFake implements _i1.GlobalKey<T> {
  _FakeGlobalKey_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_1 extends _i2.SmartFake
    implements _i1.TextEditingController {
  _FakeTextEditingController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_2 extends _i2.SmartFake implements DateTime {
  _FakeDateTime_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeItemModel_3 extends _i2.SmartFake implements _i3.ItemModel {
  _FakeItemModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DbManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockDbManager extends _i2.Mock implements _i4.DbManager {
  MockDbManager() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i1.GlobalKey<_i1.FormState> get formKey => (super.noSuchMethod(
        Invocation.getter(#formKey),
        returnValue: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#formKey),
        ),
      ) as _i1.GlobalKey<_i1.FormState>);
  @override
  _i1.TextEditingController get namaController => (super.noSuchMethod(
        Invocation.getter(#namaController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#namaController),
        ),
      ) as _i1.TextEditingController);
  @override
  set namaController(_i1.TextEditingController? _namaController) =>
      super.noSuchMethod(
        Invocation.setter(
          #namaController,
          _namaController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TextEditingController get hargaController => (super.noSuchMethod(
        Invocation.getter(#hargaController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#hargaController),
        ),
      ) as _i1.TextEditingController);
  @override
  set hargaController(_i1.TextEditingController? _hargaController) =>
      super.noSuchMethod(
        Invocation.setter(
          #hargaController,
          _hargaController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TextEditingController get stokController => (super.noSuchMethod(
        Invocation.getter(#stokController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#stokController),
        ),
      ) as _i1.TextEditingController);
  @override
  set stokController(_i1.TextEditingController? _stokController) =>
      super.noSuchMethod(
        Invocation.setter(
          #stokController,
          _stokController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TextEditingController get gambarController => (super.noSuchMethod(
        Invocation.getter(#gambarController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#gambarController),
        ),
      ) as _i1.TextEditingController);
  @override
  set gambarController(_i1.TextEditingController? _gambarController) =>
      super.noSuchMethod(
        Invocation.setter(
          #gambarController,
          _gambarController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  DateTime get currentDate => (super.noSuchMethod(
        Invocation.getter(#currentDate),
        returnValue: _FakeDateTime_2(
          this,
          Invocation.getter(#currentDate),
        ),
      ) as DateTime);
  @override
  _i4.DbManagerState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i4.DbManagerState.none,
      ) as _i4.DbManagerState);
  @override
  String get username => (super.noSuchMethod(
        Invocation.getter(#username),
        returnValue: '',
      ) as String);
  @override
  List<_i3.ItemModel> get items => (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: <_i3.ItemModel>[],
      ) as List<_i3.ItemModel>);
  @override
  List<_i3.ItemModel> get favItems => (super.noSuchMethod(
        Invocation.getter(#favItems),
        returnValue: <_i3.ItemModel>[],
      ) as List<_i3.ItemModel>);
  @override
  DateTime get date => (super.noSuchMethod(
        Invocation.getter(#date),
        returnValue: _FakeDateTime_2(
          this,
          Invocation.getter(#date),
        ),
      ) as DateTime);
  @override
  List<int> get imageBytes => (super.noSuchMethod(
        Invocation.getter(#imageBytes),
        returnValue: <int>[],
      ) as List<int>);
  @override
  String get fileName => (super.noSuchMethod(
        Invocation.getter(#fileName),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  dynamic changeState(_i4.DbManagerState? s) =>
      super.noSuchMethod(Invocation.method(
        #changeState,
        [s],
      ));
  @override
  void updateDate(DateTime? selectDate) => super.noSuchMethod(
        Invocation.method(
          #updateDate,
          [selectDate],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> getFile(_i1.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #getFile,
          [context],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> saveItem(_i1.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #saveItem,
          [context],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> addItem(_i3.ItemModel? item) => (super.noSuchMethod(
        Invocation.method(
          #addItem,
          [item],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i3.ItemModel> getItemById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getItemById,
          [id],
        ),
        returnValue: _i5.Future<_i3.ItemModel>.value(_FakeItemModel_3(
          this,
          Invocation.method(
            #getItemById,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.ItemModel>);
  @override
  void updateItem(
    int? id,
    _i3.ItemModel? item,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateItem,
          [
            id,
            item,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void deleteItem(int? id) => super.noSuchMethod(
        Invocation.method(
          #deleteItem,
          [id],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> searchData(String? keyword) => (super.noSuchMethod(
        Invocation.method(
          #searchData,
          [keyword],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void addFavorite(_i3.ItemModel? item) => super.noSuchMethod(
        Invocation.method(
          #addFavorite,
          [item],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeFavorite(_i3.ItemModel? item) => super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [item],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> orderBy(String? orderBy) => (super.noSuchMethod(
        Invocation.method(
          #orderBy,
          [orderBy],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
